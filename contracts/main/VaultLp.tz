{ parameter
    (or (or (or (or (pair %approve_token
                       address
                       (or (pair %fa12_ (address %spender) (nat %value))
                           (list %fa2_
                              (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                                  (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))))
                    (pair %balance_of
                       (list %requests (pair (address %owner) (nat %token_id)))
                       (contract %callback
                          (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))))
                (or (nat %callback_balance_fa12)
                    (list %callback_balance_fa2
                       (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
            (or (or (or %change_address
                       (pair %dex
                          (address %paul_dex_address)
                          (pair (address %deposit_dex_address) (address %reward_dex_address)))
                       (address %owner))
                    (pair %change_fee
                       (nat %reinvest)
                       (pair (nat %reinvest_burn) (pair (nat %withdraw_burn) (nat %withdraw_dev)))))
                (or (unit %default) (nat %deposit))))
        (or (or (or (unit %reinvest)
                    (list %transfer
                       (pair (address %from_)
                             (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
                (or (list %update_operators
                       (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                           (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))
                    (nat %withdraw)))
            (address %withdraw_dev))) ;
  storage
    (pair (pair %service
             (address %owner)
             (pair (address %farm_address)
                   (pair (nat %farm_id)
                         (pair (address %reward_dex_address)
                               (pair (address %deposit_dex_address) (address %paul_dex_address))))))
          (pair (big_map %accounts address (pair (nat %balance) (set %permits address)))
                (pair (pair %fees
                         (nat %reinvest)
                         (pair (nat %reinvest_burn) (pair (nat %withdraw_burn) (nat %withdraw_dev))))
                      (pair (pair %fee_balances (nat %withdraw_burn) (nat %dev))
                            (pair (nat %total_supply)
                                  (pair (nat %total_deposit)
                                        (pair (or %await_xtz (or (unit %burn_fee_) (unit %default_)) (unit %reinvest_))
                                              (pair (pair %await_balance
                                                       (or %current
                                                          (or (or (unit %deposit_balance) (unit %none_))
                                                              (or (unit %paul_balance) (unit %reward_balance)))
                                                          (unit %token_a_balance))
                                                       (or %next
                                                          (or (or (unit %deposit_balance) (unit %none_))
                                                              (or (unit %paul_balance) (unit %reward_balance)))
                                                          (unit %token_a_balance)))
                                                    (pair (or %deposit_token (address %fa12) (pair %fa2 (address %address) (nat %id)))
                                                          (pair (or %reward_token (address %fa12) (pair %fa2 (address %address) (nat %id)))
                                                                (pair (or %paul_token (address %fa12) (pair %fa2 (address %address) (nat %id)))
                                                                      (pair (mutez %xtz_cache)
                                                                            (pair (big_map %metadata string bytes)
                                                                                  (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))))))))))))) ;
  code { PUSH nat 1000000 ;
         PUSH nat 1 ;
         LAMBDA
           address
           (contract (pair address (pair address nat)))
           { CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
             IF_NONE { PUSH string "Vault/not-dep-fa12-contract" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract (pair nat nat))
           { CONTRACT %deposit (pair nat nat) ;
             IF_NONE { PUSH string "Vault/not-invest-contract" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract (pair (pair nat nat) address))
           { CONTRACT %tokenToTezPayment
               (pair (pair (nat %amount) (nat %min_out)) (address %receiver)) ;
             IF_NONE { PUSH string "Vault/not-tokenToTez-contract" ; FAILWITH } {} } ;
         LAMBDA
           (pair (pair address (pair address (pair nat (pair address (pair address address)))))
                 (pair (big_map address (pair nat (set address)))
                       (pair (pair nat (pair nat (pair nat nat)))
                             (pair (pair nat nat)
                                   (pair nat
                                         (pair nat
                                               (pair (or (or unit unit) unit)
                                                     (pair (pair (or (or (or unit unit) (or unit unit)) unit) (or (or (or unit unit) (or unit unit)) unit))
                                                           (pair (or address (pair address nat))
                                                                 (pair (or address (pair address nat))
                                                                       (pair (or address (pair address nat))
                                                                             (pair mutez (pair (big_map string bytes) (big_map nat (pair nat (map string bytes))))))))))))))))
           unit
           { CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Vault/not-owner" ; FAILWITH } {} ;
             UNIT } ;
         LAMBDA
           (pair address
                 (pair (pair address (pair address (pair nat (pair address (pair address address)))))
                       (pair (big_map address (pair nat (set address)))
                             (pair (pair nat (pair nat (pair nat nat)))
                                   (pair (pair nat nat)
                                         (pair nat
                                               (pair nat
                                                     (pair (or (or unit unit) unit)
                                                           (pair (pair (or (or (or unit unit) (or unit unit)) unit) (or (or (or unit unit) (or unit unit)) unit))
                                                                 (pair (or address (pair address nat))
                                                                       (pair (or address (pair address nat))
                                                                             (pair (or address (pair address nat))
                                                                                   (pair mutez (pair (big_map string bytes) (big_map nat (pair nat (map string bytes)))))))))))))))))
           (pair nat (set address))
           { UNPAIR ;
             SWAP ;
             GET 3 ;
             SWAP ;
             GET ;
             IF_NONE { PUSH nat 0 ; EMPTY_SET address ; SWAP ; PAIR } {} } ;
         LAMBDA
           (pair (pair (pair address address) (pair nat nat)) address)
           operation
           { UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DIG 4 ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE { PUSH string "Vault/not-dep-contract" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 3 ;
             DIG 3 ;
             PAIR ;
             DIG 4 ;
             DIG 4 ;
             DIG 2 ;
             UNPAIR ;
             NIL (pair address (list (pair address (pair nat nat)))) ;
             DIG 3 ;
             NIL (pair address (pair nat nat)) ;
             DIG 5 ;
             DIG 5 ;
             DIG 5 ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             CONS ;
             SWAP ;
             PAIR ;
             CONS ;
             TRANSFER_TOKENS } ;
         DUP 6 ;
         SWAP ;
         DUP ;
         DUG 2 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda (pair (pair (pair address address) (pair nat nat)) address) operation)
                       (lambda address (contract (pair address (pair address nat)))))
                 (pair (pair address address) (pair nat (or address (pair address nat)))))
           operation
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             SWAP ;
             IF_LEFT
               { DIG 4 ;
                 DROP ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 DIG 4 ;
                 PAIR ;
                 DIG 3 ;
                 PAIR ;
                 TRANSFER_TOKENS }
               { DIG 5 ;
                 DROP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 2 ;
                 PAIR ;
                 DIG 3 ;
                 DIG 3 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 EXEC } } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (or address (pair address nat))
           operation
           { IF_LEFT
               { CONTRACT %getBalance (pair (address %owner) (contract nat)) ;
                 IF_NONE { PUSH string "Vault/not-balance-fa12" ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 SELF_ADDRESS ;
                 CONTRACT %callback_balance_fa12 nat ;
                 IF_NONE { PUSH string "Vault/not-fa12-balance-callback" ; FAILWITH } {} ;
                 SELF_ADDRESS ;
                 PAIR ;
                 TRANSFER_TOKENS }
               { DUP ;
                 CAR ;
                 CONTRACT %balance_of
                   (pair (list %requests (pair (address %owner) (nat %token_id)))
                         (contract %callback
                            (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))) ;
                 IF_NONE { PUSH string "Vault/not-balance-fa2" ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair address nat) ;
                 SELF_ADDRESS ;
                 DIG 4 ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 CONS ;
                 SELF_ADDRESS ;
                 CONTRACT %callback_balance_fa2
                   (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) ;
                 IF_NONE { PUSH string "Vault/not-fa2-balance-callback" ; FAILWITH } {} ;
                 SWAP ;
                 PAIR ;
                 TRANSFER_TOKENS } } ;
         LAMBDA
           (or address (pair address nat))
           (pair address nat)
           { IF_LEFT { PUSH nat 0 ; SWAP ; PAIR } {} } ;
         LAMBDA
           (pair mutez address)
           operation
           { UNPAIR ;
             SWAP ;
             CONTRACT %tezToTokenPayment (pair (nat %min_out) (address %receiver)) ;
             IF_NONE { PUSH string "Vault/not-tezToToken-contract" ; FAILWITH } {} ;
             SWAP ;
             SELF_ADDRESS ;
             PUSH nat 1 ;
             PAIR ;
             TRANSFER_TOKENS } ;
         DIG 9 ;
         DIG 5 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda (pair (pair (pair address address) (pair nat nat)) address) operation)
                       (lambda address (contract (pair address (pair address nat)))))
                 (pair (pair address address)
                       (pair nat
                             (pair (pair address (pair address (pair nat (pair address (pair address address)))))
                                   (pair (big_map address (pair nat (set address)))
                                         (pair (pair nat (pair nat (pair nat nat)))
                                               (pair (pair nat nat)
                                                     (pair nat
                                                           (pair nat
                                                                 (pair (or (or unit unit) unit)
                                                                       (pair (pair (or (or (or unit unit) (or unit unit)) unit) (or (or (or unit unit) (or unit unit)) unit))
                                                                             (pair (or address (pair address nat))
                                                                                   (pair (or address (pair address nat))
                                                                                         (pair (or address (pair address nat))
                                                                                               (pair mutez (pair (big_map string bytes) (big_map nat (pair nat (map string bytes)))))))))))))))))))
           operation
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 17 ;
             IF_LEFT
               { DIG 5 ;
                 DROP 2 ;
                 SWAP ;
                 CAR ;
                 GET 9 ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 DIG 4 ;
                 PAIR ;
                 DIG 3 ;
                 PAIR ;
                 TRANSFER_TOKENS }
               { DIG 6 ;
                 DROP 2 ;
                 SWAP ;
                 CAR ;
                 GET 9 ;
                 PUSH nat 0 ;
                 DIG 2 ;
                 PAIR ;
                 DIG 3 ;
                 DIG 3 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 EXEC } } ;
         SWAP ;
         APPLY ;
         DUP 11 ;
         DUP 11 ;
         DUP 10 ;
         DUP 8 ;
         DUP 7 ;
         PAIR 5 ;
         LAMBDA
           (pair (pair (lambda (or address (pair address nat)) (pair address nat))
                       (pair (lambda (pair (pair address address) (pair nat (or address (pair address nat)))) operation)
                             (pair (lambda address (contract (pair (pair nat nat) address))) (pair nat nat))))
                 (pair nat
                       (pair (pair address (pair address (pair nat (pair address (pair address address)))))
                             (pair (big_map address (pair nat (set address)))
                                   (pair (pair nat (pair nat (pair nat nat)))
                                         (pair (pair nat nat)
                                               (pair nat
                                                     (pair nat
                                                           (pair (or (or unit unit) unit)
                                                                 (pair (pair (or (or (or unit unit) (or unit unit)) unit) (or (or (or unit unit) (or unit unit)) unit))
                                                                       (pair (or address (pair address nat))
                                                                             (pair (or address (pair address nat))
                                                                                   (pair (or address (pair address nat))
                                                                                         (pair mutez (pair (big_map string bytes) (big_map nat (pair nat (map string bytes))))))))))))))))))
           (pair (list operation)
                 (pair (pair address (pair address (pair nat (pair address (pair address address)))))
                       (pair (big_map address (pair nat (set address)))
                             (pair (pair nat (pair nat (pair nat nat)))
                                   (pair (pair nat nat)
                                         (pair nat
                                               (pair nat
                                                     (pair (or (or unit unit) unit)
                                                           (pair (pair (or (or (or unit unit) (or unit unit)) unit) (or (or (or unit unit) (or unit unit)) unit))
                                                                 (pair (or address (pair address nat))
                                                                       (pair (or address (pair address nat))
                                                                             (pair (or address (pair address nat))
                                                                                   (pair mutez (pair (big_map string bytes) (big_map nat (pair nat (map string bytes)))))))))))))))))
           { UNPAIR ;
             UNPAIR 5 ;
             DIG 5 ;
             UNPAIR ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { PUSH string "Vault/not-reward" ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 19 ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Vault/unknown-sender" ; FAILWITH } {} ;
             DIG 5 ;
             DUP 3 ;
             GET 5 ;
             CAR ;
             DUP 3 ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DUP ;
             DIG 2 ;
             SUB ;
             ABS ;
             PUSH nat 0 ;
             DUP 3 ;
             COMPARE ;
             GE ;
             IF { NIL operation ;
                  DUP 4 ;
                  GET 19 ;
                  DIG 3 ;
                  PAIR ;
                  SOURCE ;
                  SELF_ADDRESS ;
                  PAIR ;
                  PAIR ;
                  DIG 4 ;
                  SWAP ;
                  EXEC ;
                  CONS }
                { SWAP ; DIG 3 ; DROP 2 ; NIL operation } ;
             DIG 2 ;
             PUSH unit Unit ;
             RIGHT (or unit unit) ;
             UPDATE 13 ;
             DUP ;
             DUG 2 ;
             CAR ;
             GET 7 ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             PUSH mutez 0 ;
             SELF_ADDRESS ;
             DIG 6 ;
             DIG 6 ;
             PAIR ;
             PAIR ;
             TRANSFER_TOKENS ;
             CONS ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DUP 12 ;
         DUP 11 ;
         DUP 6 ;
         PAIR 3 ;
         LAMBDA
           (pair (pair (lambda (or address (pair address nat)) (pair address nat))
                       (pair (lambda address (contract (pair nat nat))) nat))
                 (pair nat
                       (pair (pair address (pair address (pair nat (pair address (pair address address)))))
                             (pair (big_map address (pair nat (set address)))
                                   (pair (pair nat (pair nat (pair nat nat)))
                                         (pair (pair nat nat)
                                               (pair nat
                                                     (pair nat
                                                           (pair (or (or unit unit) unit)
                                                                 (pair (pair (or (or (or unit unit) (or unit unit)) unit) (or (or (or unit unit) (or unit unit)) unit))
                                                                       (pair (or address (pair address nat))
                                                                             (pair (or address (pair address nat))
                                                                                   (pair (or address (pair address nat))
                                                                                         (pair mutez (pair (big_map string bytes) (big_map nat (pair nat (map string bytes))))))))))))))))))
           (pair (list operation)
                 (pair (pair address (pair address (pair nat (pair address (pair address address)))))
                       (pair (big_map address (pair nat (set address)))
                             (pair (pair nat (pair nat (pair nat nat)))
                                   (pair (pair nat nat)
                                         (pair nat
                                               (pair nat
                                                     (pair (or (or unit unit) unit)
                                                           (pair (pair (or (or (or unit unit) (or unit unit)) unit) (or (or (or unit unit) (or unit unit)) unit))
                                                                 (pair (or address (pair address nat))
                                                                       (pair (or address (pair address nat))
                                                                             (pair (or address (pair address nat))
                                                                                   (pair mutez (pair (big_map string bytes) (big_map nat (pair nat (map string bytes)))))))))))))))))
           { UNPAIR ;
             UNPAIR 3 ;
             DIG 3 ;
             UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 17 ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Vault/unknown-sender" ; FAILWITH } {} ;
             NIL operation ;
             DUP 5 ;
             DUP 4 ;
             GET 7 ;
             CAR ;
             DUP 5 ;
             GET 7 ;
             CDR ;
             DUP 8 ;
             DIG 5 ;
             MUL ;
             SUB ;
             SUB ;
             ABS ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { DIG 3 ; DIG 4 ; DROP 3 ; PUSH string "Vault/zero-reinvest" ; FAILWITH }
                { DUP 3 ;
                  DIG 5 ;
                  DUP 3 ;
                  MUL ;
                  DIG 4 ;
                  GET 11 ;
                  ADD ;
                  UPDATE 11 ;
                  DIG 2 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  GET 3 ;
                  DIG 4 ;
                  SWAP ;
                  EXEC ;
                  PUSH mutez 0 ;
                  DIG 4 ;
                  DUP 5 ;
                  CAR ;
                  GET 5 ;
                  PAIR ;
                  TRANSFER_TOKENS ;
                  CONS ;
                  PAIR } ;
             DUP ;
             CDR ;
             PUSH unit Unit ;
             RIGHT unit ;
             LEFT unit ;
             UPDATE 13 ;
             DUP ;
             DUP ;
             DUG 2 ;
             GET 15 ;
             DIG 2 ;
             GET 15 ;
             CDR ;
             UPDATE 1 ;
             UPDATE 15 ;
             SWAP ;
             CAR ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DUP 7 ;
         DUP 6 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda (or address (pair address nat)) (pair address nat))
                       (lambda (pair (pair address address) (pair nat (or address (pair address nat)))) operation))
                 (pair nat
                       (pair (pair address (pair address (pair nat (pair address (pair address address)))))
                             (pair (big_map address (pair nat (set address)))
                                   (pair (pair nat (pair nat (pair nat nat)))
                                         (pair (pair nat nat)
                                               (pair nat
                                                     (pair nat
                                                           (pair (or (or unit unit) unit)
                                                                 (pair (pair (or (or (or unit unit) (or unit unit)) unit) (or (or (or unit unit) (or unit unit)) unit))
                                                                       (pair (or address (pair address nat))
                                                                             (pair (or address (pair address nat))
                                                                                   (pair (or address (pair address nat))
                                                                                         (pair mutez (pair (big_map string bytes) (big_map nat (pair nat (map string bytes))))))))))))))))))
           (pair (list operation)
                 (pair (pair address (pair address (pair nat (pair address (pair address address)))))
                       (pair (big_map address (pair nat (set address)))
                             (pair (pair nat (pair nat (pair nat nat)))
                                   (pair (pair nat nat)
                                         (pair nat
                                               (pair nat
                                                     (pair (or (or unit unit) unit)
                                                           (pair (pair (or (or (or unit unit) (or unit unit)) unit) (or (or (or unit unit) (or unit unit)) unit))
                                                                 (pair (or address (pair address nat))
                                                                       (pair (or address (pair address nat))
                                                                             (pair (or address (pair address nat))
                                                                                   (pair mutez (pair (big_map string bytes) (big_map nat (pair nat (map string bytes)))))))))))))))))
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 21 ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Vault/unknown-sender" ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 21 ;
             SWAP ;
             PAIR ;
             PUSH address "tz1ZZZZZZZZZZZZZZZZZZZZZZZZZZZZNkiRg" ;
             SELF_ADDRESS ;
             PAIR ;
             PAIR ;
             DIG 2 ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUP ;
             GET 15 ;
             PUSH unit Unit ;
             LEFT unit ;
             LEFT (or unit unit) ;
             LEFT unit ;
             UPDATE 1 ;
             UPDATE 15 ;
             NIL operation ;
             DIG 2 ;
             CONS ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DUP 13 ;
         DIG 11 ;
         DIG 7 ;
         PAIR 3 ;
         LAMBDA
           (pair (pair (lambda (or address (pair address nat)) (pair address nat))
                       (pair (lambda address (contract (pair (pair nat nat) address))) nat))
                 (pair nat
                       (pair (pair address (pair address (pair nat (pair address (pair address address)))))
                             (pair (big_map address (pair nat (set address)))
                                   (pair (pair nat (pair nat (pair nat nat)))
                                         (pair (pair nat nat)
                                               (pair nat
                                                     (pair nat
                                                           (pair (or (or unit unit) unit)
                                                                 (pair (pair (or (or (or unit unit) (or unit unit)) unit) (or (or (or unit unit) (or unit unit)) unit))
                                                                       (pair (or address (pair address nat))
                                                                             (pair (or address (pair address nat))
                                                                                   (pair (or address (pair address nat))
                                                                                         (pair mutez (pair (big_map string bytes) (big_map nat (pair nat (map string bytes))))))))))))))))))
           (pair (list operation)
                 (pair (pair address (pair address (pair nat (pair address (pair address address)))))
                       (pair (big_map address (pair nat (set address)))
                             (pair (pair nat (pair nat (pair nat nat)))
                                   (pair (pair nat nat)
                                         (pair nat
                                               (pair nat
                                                     (pair (or (or unit unit) unit)
                                                           (pair (pair (or (or (or unit unit) (or unit unit)) unit) (or (or (or unit unit) (or unit unit)) unit))
                                                                 (pair (or address (pair address nat))
                                                                       (pair (or address (pair address nat))
                                                                             (pair (or address (pair address nat))
                                                                                   (pair mutez (pair (big_map string bytes) (big_map nat (pair nat (map string bytes)))))))))))))))))
           { UNPAIR ;
             UNPAIR 3 ;
             DIG 3 ;
             UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 17 ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Vault/unknown-sender" ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             GET 9 ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             PUSH mutez 0 ;
             SELF_ADDRESS ;
             DIG 5 ;
             DIG 4 ;
             PAIR ;
             PAIR ;
             TRANSFER_TOKENS ;
             SWAP ;
             PUSH unit Unit ;
             RIGHT unit ;
             LEFT unit ;
             UPDATE 13 ;
             NIL operation ;
             DIG 2 ;
             CONS ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DIG 13 ;
         UNPAIR ;
         IF_LEFT
           { DIG 9 ;
             DROP ;
             IF_LEFT
               { DIG 6 ;
                 DIG 7 ;
                 DIG 8 ;
                 DIG 11 ;
                 DIG 12 ;
                 DIG 13 ;
                 DROP 6 ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DROP 4 ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         UNPAIR ;
                         DUP 3 ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SWAP ;
                         IF_LEFT
                           { SWAP ;
                             CONTRACT %approve (pair (address %spender) (nat %value)) ;
                             IF_NONE { PUSH string "Vault/not-fa12-approve" ; FAILWITH } {} ;
                             PUSH mutez 0 ;
                             DIG 2 ;
                             TRANSFER_TOKENS }
                           { SWAP ;
                             CONTRACT %update_operators
                               (list (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                                         (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))) ;
                             IF_NONE { PUSH string "Vault/not-fa2-approve" ; FAILWITH } {} ;
                             PUSH mutez 0 ;
                             DIG 2 ;
                             TRANSFER_TOKENS } ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { DIG 3 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DIG 2 ;
                         NIL (pair (pair address nat) nat) ;
                         DUP 3 ;
                         CAR ;
                         ITER { SWAP ;
                                DUP 3 ;
                                DUP 3 ;
                                CAR ;
                                PAIR ;
                                DUP 7 ;
                                SWAP ;
                                EXEC ;
                                SWAP ;
                                DUG 2 ;
                                CAR ;
                                SWAP ;
                                PAIR ;
                                CONS } ;
                         SWAP ;
                         DIG 4 ;
                         DROP 2 ;
                         NIL operation ;
                         DIG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR } }
                   { DIG 6 ;
                     DIG 7 ;
                     DROP 2 ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 15 ;
                         CAR ;
                         IF_LEFT
                           { DIG 3 ;
                             DROP ;
                             IF_LEFT
                               { DIG 3 ;
                                 DIG 5 ;
                                 DROP 2 ;
                                 IF_LEFT
                                   { DROP ; PAIR ; EXEC }
                                   { DROP 4 ; PUSH string "Vault-not-expected-balance" ; FAILWITH } }
                               { DIG 4 ;
                                 DROP ;
                                 IF_LEFT { DIG 4 ; DROP 2 ; PAIR ; EXEC } { DIG 3 ; DROP 2 ; PAIR ; EXEC } } }
                           { DIG 4 ; DIG 5 ; DIG 6 ; DROP 4 ; PAIR ; EXEC } }
                       { IF_CONS { SWAP ; DROP ; SOME } { NONE (pair (pair address nat) nat) } ;
                         IF_NONE { PUSH nat 0 } { CDR } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 15 ;
                         CAR ;
                         IF_LEFT
                           { DIG 3 ;
                             DROP ;
                             IF_LEFT
                               { DIG 3 ;
                                 DIG 5 ;
                                 DROP 2 ;
                                 IF_LEFT
                                   { DROP ; PAIR ; EXEC }
                                   { DROP 4 ; PUSH string "Vault-not-expected-balance" ; FAILWITH } }
                               { DIG 4 ;
                                 DROP ;
                                 IF_LEFT { DIG 4 ; DROP 2 ; PAIR ; EXEC } { DIG 3 ; DROP 2 ; PAIR ; EXEC } } }
                           { DIG 4 ; DIG 5 ; DIG 6 ; DROP 4 ; PAIR ; EXEC } } } }
               { DIG 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DIG 5 ;
                 DROP 4 ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DIG 7 ;
                     DIG 8 ;
                     DIG 9 ;
                     DROP 7 ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         IF_LEFT
                           { SWAP ;
                             DUP ;
                             CAR ;
                             DUP 3 ;
                             CAR ;
                             UPDATE 10 ;
                             DUP 3 ;
                             GET 3 ;
                             UPDATE 9 ;
                             DIG 2 ;
                             GET 4 ;
                             UPDATE 7 ;
                             UPDATE 1 }
                           { SWAP ; DUP ; CAR ; DIG 2 ; UPDATE 1 ; UPDATE 1 } ;
                         NIL operation ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         UPDATE 5 ;
                         NIL operation ;
                         PAIR } }
                   { DIG 6 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DIG 5 ;
                         DIG 6 ;
                         DROP 4 ;
                         NIL operation ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 13 ;
                         IF_LEFT
                           { DIG 5 ;
                             DIG 6 ;
                             DROP 2 ;
                             IF_LEFT
                               { DIG 3 ;
                                 DROP 2 ;
                                 SWAP ;
                                 AMOUNT ;
                                 UPDATE 23 ;
                                 DUP ;
                                 GET 15 ;
                                 PUSH unit Unit ;
                                 RIGHT (or (or unit unit) (or unit unit)) ;
                                 UPDATE 1 ;
                                 UPDATE 15 ;
                                 DUP ;
                                 DUG 2 ;
                                 GET 17 ;
                                 DIG 3 ;
                                 SWAP ;
                                 EXEC ;
                                 CONS ;
                                 PAIR }
                               { DROP ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 GET 21 ;
                                 DIG 4 ;
                                 SWAP ;
                                 EXEC ;
                                 CONS ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 GET 10 ;
                                 DUP 3 ;
                                 GET 23 ;
                                 AMOUNT ;
                                 ADD ;
                                 PAIR ;
                                 DIG 3 ;
                                 SWAP ;
                                 EXEC ;
                                 CONS ;
                                 SWAP ;
                                 DUP ;
                                 GET 15 ;
                                 PUSH unit Unit ;
                                 LEFT unit ;
                                 RIGHT (or unit unit) ;
                                 LEFT unit ;
                                 UPDATE 1 ;
                                 UPDATE 15 ;
                                 SWAP ;
                                 PAIR } }
                           { DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 21 ;
                             DUP 5 ;
                             SWAP ;
                             EXEC ;
                             CONS ;
                             DUP 6 ;
                             DUP 3 ;
                             GET 5 ;
                             GET 3 ;
                             AMOUNT ;
                             MUL ;
                             EDIV ;
                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                             CAR ;
                             SWAP ;
                             DUP 3 ;
                             CAR ;
                             GET 10 ;
                             DUP 3 ;
                             PAIR ;
                             DUP 5 ;
                             SWAP ;
                             EXEC ;
                             CONS ;
                             DUP 3 ;
                             GET 17 ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             CONS ;
                             PUSH nat 2 ;
                             DIG 2 ;
                             AMOUNT ;
                             SUB ;
                             EDIV ;
                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                             CAR ;
                             SWAP ;
                             DUP 3 ;
                             CAR ;
                             GET 9 ;
                             CONTRACT %investLiquidity nat ;
                             IF_NONE { PUSH string "Vault/not-invest-liquidity-contract" ; FAILWITH } {} ;
                             DUP 3 ;
                             PUSH nat 9999999999999999999999999999999999999999999 ;
                             TRANSFER_TOKENS ;
                             CONS ;
                             DUP 3 ;
                             CAR ;
                             GET 9 ;
                             DIG 2 ;
                             PAIR ;
                             DIG 3 ;
                             SWAP ;
                             EXEC ;
                             CONS ;
                             SWAP ;
                             DUP ;
                             GET 15 ;
                             PUSH unit Unit ;
                             LEFT unit ;
                             RIGHT (or unit unit) ;
                             LEFT unit ;
                             UPDATE 2 ;
                             UPDATE 15 ;
                             DUP ;
                             GET 15 ;
                             PUSH unit Unit ;
                             LEFT unit ;
                             LEFT (or unit unit) ;
                             LEFT unit ;
                             UPDATE 1 ;
                             UPDATE 15 ;
                             DUP 4 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 7 ;
                             CAR ;
                             EDIV ;
                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                             CAR ;
                             PUSH nat 0 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             COMPARE ;
                             GT ;
                             IF { DUG 2 ;
                                  DUP ;
                                  DUG 3 ;
                                  CAR ;
                                  GET 9 ;
                                  CONTRACT %divestLiquidity
                                    (pair (pair (nat %min_tez) (nat %min_tokens)) (nat %shares)) ;
                                  IF_NONE { PUSH string "Vault/not-divest-liquidity-contract" ; FAILWITH } {} ;
                                  PUSH mutez 0 ;
                                  DUP 4 ;
                                  DIG 6 ;
                                  DUP ;
                                  PAIR ;
                                  PAIR ;
                                  TRANSFER_TOKENS ;
                                  CONS ;
                                  DIG 2 ;
                                  DUP ;
                                  DUP ;
                                  DUG 4 ;
                                  GET 7 ;
                                  DIG 5 ;
                                  DIG 4 ;
                                  MUL ;
                                  DIG 4 ;
                                  GET 7 ;
                                  CAR ;
                                  SUB ;
                                  ABS ;
                                  UPDATE 1 ;
                                  UPDATE 7 ;
                                  PUSH unit Unit ;
                                  LEFT unit ;
                                  LEFT unit ;
                                  UPDATE 13 ;
                                  SWAP ;
                                  PAIR }
                                { DIG 3 ; DIG 4 ; DROP 3 ; SWAP ; PAIR } } }
                       { DIG 3 ;
                         DIG 4 ;
                         DIG 7 ;
                         DROP 3 ;
                         PUSH nat 0 ;
                         DUP 3 ;
                         GET 11 ;
                         COMPARE ;
                         EQ ;
                         IF { DUP }
                            { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 11 ;
                              DUP 3 ;
                              GET 9 ;
                              DUP 8 ;
                              DUP 4 ;
                              MUL ;
                              MUL ;
                              EDIV ;
                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                              CAR } ;
                         DUP 3 ;
                         SENDER ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         DUP 3 ;
                         DIG 2 ;
                         CAR ;
                         ADD ;
                         UPDATE 1 ;
                         DUP 4 ;
                         DIG 7 ;
                         DUP 5 ;
                         MUL ;
                         DIG 5 ;
                         GET 11 ;
                         ADD ;
                         UPDATE 11 ;
                         DUP ;
                         DIG 3 ;
                         DIG 2 ;
                         GET 9 ;
                         ADD ;
                         UPDATE 9 ;
                         DUP ;
                         GET 3 ;
                         DIG 2 ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         UPDATE 3 ;
                         PUSH nat 0 ;
                         DUP 3 ;
                         COMPARE ;
                         GT ;
                         IF { NIL operation ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              GET 3 ;
                              DIG 5 ;
                              SWAP ;
                              EXEC ;
                              PUSH mutez 0 ;
                              DUP 5 ;
                              DUP 5 ;
                              CAR ;
                              GET 5 ;
                              PAIR ;
                              TRANSFER_TOKENS ;
                              CONS ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              DIG 3 ;
                              PAIR ;
                              SELF_ADDRESS ;
                              SENDER ;
                              PAIR ;
                              PAIR ;
                              DIG 3 ;
                              SWAP ;
                              EXEC ;
                              CONS }
                            { SWAP ; DIG 2 ; DIG 3 ; DROP 3 ; NIL operation } ;
                         PAIR } } } }
           { DIG 2 ;
             DIG 3 ;
             DIG 4 ;
             DIG 5 ;
             DIG 7 ;
             DIG 12 ;
             DIG 13 ;
             DROP 7 ;
             IF_LEFT
               { DIG 4 ;
                 DIG 6 ;
                 DROP 2 ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { DIG 3 ;
                         DIG 4 ;
                         DROP 3 ;
                         DUP ;
                         CAR ;
                         GET 3 ;
                         CONTRACT %harvest nat ;
                         IF_NONE { PUSH string "Vault/not-harvest-contract" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DUP 3 ;
                         CAR ;
                         GET 5 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 19 ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         DUP ;
                         GET 15 ;
                         PUSH unit Unit ;
                         RIGHT unit ;
                         RIGHT (or unit unit) ;
                         LEFT unit ;
                         UPDATE 1 ;
                         UPDATE 15 ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         NIL operation ;
                         PAIR ;
                         SWAP ;
                         ITER { DUP ;
                                DUG 2 ;
                                CDR ;
                                ITER { SWAP ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       DUP 5 ;
                                       CAR ;
                                       PAIR ;
                                       DUP 6 ;
                                       SWAP ;
                                       EXEC ;
                                       DUP ;
                                       CDR ;
                                       SENDER ;
                                       MEM ;
                                       SENDER ;
                                       DUP 7 ;
                                       CAR ;
                                       COMPARE ;
                                       NEQ ;
                                       AND ;
                                       IF { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } {} ;
                                       PUSH nat 0 ;
                                       DUP 5 ;
                                       GET 4 ;
                                       COMPARE ;
                                       EQ ;
                                       IF { PUSH string "Vault/zero-amount-in" ; FAILWITH } {} ;
                                       DUP 4 ;
                                       GET 4 ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CAR ;
                                       COMPARE ;
                                       LT ;
                                       IF { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } {} ;
                                       DUP 7 ;
                                       DUP 3 ;
                                       GET 9 ;
                                       MUL ;
                                       DUP 3 ;
                                       GET 11 ;
                                       DUP 6 ;
                                       GET 4 ;
                                       MUL ;
                                       EDIV ;
                                       IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                       CAR ;
                                       DUP 3 ;
                                       GET 5 ;
                                       GET 5 ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       MUL ;
                                       DUP 4 ;
                                       GET 5 ;
                                       GET 6 ;
                                       DUP 3 ;
                                       MUL ;
                                       DUP ;
                                       DUP 3 ;
                                       ADD ;
                                       DUP ;
                                       DUP 12 ;
                                       DIG 5 ;
                                       MUL ;
                                       SUB ;
                                       ABS ;
                                       DUP 6 ;
                                       GET 11 ;
                                       DUP 7 ;
                                       GET 9 ;
                                       DIG 2 ;
                                       MUL ;
                                       EDIV ;
                                       IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                       CAR ;
                                       DIG 5 ;
                                       DUP ;
                                       DUP ;
                                       DUG 7 ;
                                       GET 7 ;
                                       DIG 4 ;
                                       DIG 7 ;
                                       GET 7 ;
                                       CDR ;
                                       ADD ;
                                       UPDATE 2 ;
                                       UPDATE 7 ;
                                       DUP ;
                                       DUP ;
                                       DUG 2 ;
                                       GET 7 ;
                                       DIG 5 ;
                                       DIG 3 ;
                                       GET 7 ;
                                       CAR ;
                                       ADD ;
                                       UPDATE 1 ;
                                       UPDATE 7 ;
                                       DUP 4 ;
                                       DUP 7 ;
                                       GET 4 ;
                                       DIG 5 ;
                                       CAR ;
                                       SUB ;
                                       ABS ;
                                       UPDATE 1 ;
                                       SWAP ;
                                       DUP ;
                                       GET 3 ;
                                       DIG 2 ;
                                       SOME ;
                                       SENDER ;
                                       UPDATE ;
                                       UPDATE 3 ;
                                       DUP ;
                                       DUP 6 ;
                                       CAR ;
                                       PAIR ;
                                       DUP 8 ;
                                       SWAP ;
                                       EXEC ;
                                       DUP ;
                                       DIG 3 ;
                                       DIG 2 ;
                                       CAR ;
                                       ADD ;
                                       UPDATE 1 ;
                                       SWAP ;
                                       DUP ;
                                       GET 3 ;
                                       DIG 2 ;
                                       DIG 5 ;
                                       CAR ;
                                       SWAP ;
                                       SOME ;
                                       SWAP ;
                                       UPDATE ;
                                       UPDATE 3 ;
                                       DUP ;
                                       DUG 2 ;
                                       GET 11 ;
                                       SUB ;
                                       ABS ;
                                       UPDATE 11 ;
                                       SWAP ;
                                       CAR ;
                                       PAIR } ;
                                SWAP ;
                                DROP } ;
                         SWAP ;
                         DIG 2 ;
                         DROP 2 } }
                   { DIG 3 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DIG 4 ;
                         DROP 2 ;
                         ITER { IF_LEFT
                                  { DUP ;
                                    CAR ;
                                    SENDER ;
                                    COMPARE ;
                                    NEQ ;
                                    IF { PUSH string "FA2_NOT_OWNER" ; FAILWITH } {} ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    PAIR ;
                                    DUP 4 ;
                                    SWAP ;
                                    EXEC ;
                                    DIG 2 ;
                                    DUP ;
                                    GET 3 ;
                                    DIG 2 ;
                                    DUP ;
                                    CDR ;
                                    DUP 5 ;
                                    GET 3 ;
                                    PUSH bool True ;
                                    SWAP ;
                                    UPDATE ;
                                    UPDATE 2 ;
                                    DIG 3 ;
                                    CAR ;
                                    SWAP ;
                                    SOME ;
                                    SWAP ;
                                    UPDATE ;
                                    UPDATE 3 }
                                  { DUP ;
                                    CAR ;
                                    SENDER ;
                                    COMPARE ;
                                    NEQ ;
                                    IF { PUSH string "FA2_NOT_OWNER" ; FAILWITH } {} ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    PAIR ;
                                    DUP 4 ;
                                    SWAP ;
                                    EXEC ;
                                    DIG 2 ;
                                    DUP ;
                                    GET 3 ;
                                    DIG 2 ;
                                    DUP ;
                                    CDR ;
                                    DUP 5 ;
                                    GET 3 ;
                                    PUSH bool False ;
                                    SWAP ;
                                    UPDATE ;
                                    UPDATE 2 ;
                                    DIG 3 ;
                                    CAR ;
                                    SWAP ;
                                    SOME ;
                                    SWAP ;
                                    UPDATE ;
                                    UPDATE 3 } } ;
                         SWAP ;
                         DROP ;
                         NIL operation ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         SENDER ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "Vault/insufficient-balance" ; FAILWITH } {} ;
                         DUP 5 ;
                         DUP 4 ;
                         GET 9 ;
                         MUL ;
                         DUP 4 ;
                         GET 11 ;
                         DUP 4 ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP 4 ;
                         GET 5 ;
                         GET 5 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         MUL ;
                         DUP 5 ;
                         GET 5 ;
                         GET 6 ;
                         DUP 3 ;
                         MUL ;
                         DUP ;
                         DUP 3 ;
                         ADD ;
                         DUP 9 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP 11 ;
                         DUP 7 ;
                         MUL ;
                         SUB ;
                         ABS ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIG 7 ;
                         DUP ;
                         DUP ;
                         DUG 9 ;
                         GET 7 ;
                         DIG 4 ;
                         DIG 9 ;
                         GET 7 ;
                         CDR ;
                         ADD ;
                         UPDATE 2 ;
                         UPDATE 7 ;
                         DUP ;
                         DUP ;
                         DUG 2 ;
                         GET 7 ;
                         DIG 5 ;
                         DIG 3 ;
                         GET 7 ;
                         CAR ;
                         ADD ;
                         UPDATE 1 ;
                         UPDATE 7 ;
                         DUP ;
                         DIG 3 ;
                         DIG 8 ;
                         DUP 5 ;
                         MUL ;
                         DIG 3 ;
                         GET 11 ;
                         SUB ;
                         SUB ;
                         ABS ;
                         UPDATE 11 ;
                         DUP ;
                         DUP 6 ;
                         DIG 2 ;
                         GET 9 ;
                         SUB ;
                         ABS ;
                         UPDATE 9 ;
                         DUP 4 ;
                         DIG 5 ;
                         DIG 5 ;
                         CAR ;
                         SUB ;
                         ABS ;
                         UPDATE 1 ;
                         SWAP ;
                         DUP ;
                         GET 3 ;
                         DIG 2 ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         UPDATE 3 ;
                         PUSH nat 0 ;
                         DUP 4 ;
                         COMPARE ;
                         GT ;
                         IF { NIL operation ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              DIG 3 ;
                              PAIR ;
                              SENDER ;
                              SELF_ADDRESS ;
                              PAIR ;
                              PAIR ;
                              DIG 4 ;
                              SWAP ;
                              EXEC ;
                              CONS ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              GET 3 ;
                              CONTRACT %withdraw (pair nat nat) ;
                              IF_NONE { PUSH string "Vault/not-withdraw-contract" ; FAILWITH } {} ;
                              PUSH mutez 0 ;
                              DIG 4 ;
                              DUP 5 ;
                              CAR ;
                              GET 5 ;
                              PAIR ;
                              TRANSFER_TOKENS ;
                              CONS }
                            { SWAP ; DIG 2 ; DIG 3 ; DROP 3 ; NIL operation } ;
                         PAIR } } }
               { DIG 2 ;
                 DIG 3 ;
                 DIG 5 ;
                 DROP 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP 4 ;
                 DUP 3 ;
                 GET 7 ;
                 CDR ;
                 EDIV ;
                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                 CAR ;
                 PUSH nat 0 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH string "Vault/not-dev-fee" ; FAILWITH } {} ;
                 DUP 3 ;
                 GET 17 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DIG 2 ;
                 SELF_ADDRESS ;
                 PAIR ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 DUP ;
                 DUP ;
                 DUG 4 ;
                 GET 7 ;
                 DIG 5 ;
                 DIG 4 ;
                 MUL ;
                 DIG 4 ;
                 GET 7 ;
                 CDR ;
                 SUB ;
                 ABS ;
                 UPDATE 2 ;
                 UPDATE 7 ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } } } }

